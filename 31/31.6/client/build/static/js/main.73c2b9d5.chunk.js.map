{"version":3,"sources":["redux/postsRedux.js","redux/store.js","components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostRank/PostRank.js","components/features/PostRank/PostRankContainer.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/Post/PostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPost.js","components/pages/UpdatePost/UpdatePost.js","components/pages/RandomPost/RandomPost.js","App.js","index.js"],"names":["createActionName","name","concat","LOAD_POSTS","LOAD_SINGLE_POST","LOAD_POST_TO_UPDATE","CLEAR_POST_TO_UPDATE","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","LOAD_POSTS_PAGE","LIKE_POST","UNLIKE_POST","getRequest","_ref3","posts","request","getPages","_ref6","Math","ceil","amount","postsPerPage","startRequest","type","loadSinglePost","payload","loadPostToUpdate","endRequest","errorRequest","error","loadPostsByPage","initialState","data","pending","success","singlePost","postToUpdate","presentPage","loadSinglePostRequest","id","update","_ref8","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","action","res","wrap","_context2","prev","next","axios","get","sent","Promise","resolve","reject","t0","message","stop","_x2","apply","this","arguments","rootReducer","combineReducers","statePart","length","undefined","objectSpread","toConsumableArray","map","post","postCopy","likes","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","PageContainer","_ref","children","react_default","createElement","className","Logo","links","location","MainMenu","link","index","key","react_router_dom","pathname","path","to","title","withRouter","props","MainMenu_MainMenu_MainMenu","NavBar","state","common_Logo_Logo","layout_MainMenu_MainMenu","React","Component","MainLayout","layout_PageContainer_PageContainer","features_NavBar_NavBar","PageTitle","BASE_URL","Button","_ref$variant","variant","otherProps","objectWithoutProperties","assign","SmallTitle","HtmlBox","ReactHtmlParser","PostRank","likePost","unLikePost","onClick","connect","ownProps","_ref13","_callee7","_context7","put","_x7","_ref14","_callee8","_context8","_x8","PostSummary","content","author","common_SmallTitle_SmallTitle","lib","appId","href","PostRankContainer","common_HtmlBox_HtmlBox","common_Button_Button","PostSummary_PostSummary_PostSummary","PostsList","features_PostSummary_PostSummary","Spinner","react_animated_css_lib","animationIn","animationOut","Alert","index_esm","icon","Pagination","changePage","newPage","onPageChange","_this","renderNavButton","_this$props","pages","page","button","_this$props2","Array","el","pageNum","Posts","initialPage","pagination","loadPostsPage","setState","_this$state","_this$props$request","_this$state2","Fragment","features_PostsList_PostsList","common_Pagination_Pagination","common_Spinner_Spinner","common_Alert_Alert","renderContent","_ref11","_callee5","limit","startAt","_context5","_x5","loadPostsByPageRequest","HomePage","common_PageTitle_PageTitle","PostsContainer","PostsCounter","postsCount","_ref2","PostsPage","PostCounterContainer","ContactPage","NotFoundPage","SinglePost","random","loadRandomPost","propTypes","PropTypes","object","func","SinglePost_SinglePost","_ref4","_ref12","_callee6","_context6","_x6","PostPage","match","params","SinglePostContainer","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","defineProperty","target","handleEditor","text","sendPost","addPost","updatePost","isUpdate","callback","preventDefault","loadPost","resetRequest","_this$props3","onSubmit","common_TextField_TextField","common_SectionTitle_SectionTitle","react_medium_editor_default","options","placeholder","toolbar","buttons","_ref5","_ref9","_callee3","_context3","_x3","addPostRequest","_ref10","_callee4","_context4","patch","_x4","updatePostRequest","AddPost","PostFormContainer","UpdatePost","RandomPost","App","layout_MainLayout_MainLayout","react_router","exact","component","Home","Contact","Post","NotFound","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.73c2b9d5.chunk.js","sourcesContent":["import axios from 'axios';\n\n// action name creator\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\nexport const LOAD_POST_TO_UPDATE = createActionName('LOAD_POST_TO_UPDATE');\nexport const CLEAR_POST_TO_UPDATE = createActionName('CLEAR_SINGLE_POST');\nexport const START_REQUEST = createActionName('START_REQUEST');\nexport const END_REQUEST = createActionName('END_REQUEST');\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\nexport const LIKE_POST = createActionName('LIKE_POST');\nexport const UNLIKE_POST = createActionName('UNLIKE POST');\n\n/* SELECTORS */\n\nexport const getPosts = ({ posts }) => posts.data;\nexport const getPostsCount = ({ posts }) => posts.data.length;\nexport const getRequest = ({ posts }) => posts.request;\nexport const getSinglePost = ({ posts }) => posts.singlePost;\nexport const getPostToUpdate = ({ posts }) => posts.postToUpdate;\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\n\n/* ACTIONS */\n\nexport const startRequest = () => ({ type: START_REQUEST });\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\nexport const loadPostToUpdate = payload => ({ payload, type: LOAD_POST_TO_UPDATE });\nexport const clearSinglePost = () => ({ type: CLEAR_POST_TO_UPDATE });\nexport const endRequest = () => ({ type: END_REQUEST });\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\nexport const resetRequest = () => ({ type: RESET_REQUEST });\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\nexport const likePost = payload => ({ payload, type: LIKE_POST });\nexport const unLikePost = payload => ({ payload, type: LIKE_POST });\n\n/* INITIAL STATE */\n\nconst initialState = {\n  data: [],\n  request: {\n    pending: false,\n    error: null,\n    success: null,\n  },\n  singlePost: null,\n  postToUpdate: null,\n  amount: 0,\n  postsPerPage: 10,\n  presentPage: 0\n};\n\n/* REDUCER */\n\nexport default function reducer(statePart = initialState, action = {}) {\n  switch (action.type) {\n    \n    case LOAD_POSTS:\n      return { ...statePart, data: action.payload };\n\n    case LOAD_SINGLE_POST:\n      return { ...statePart, singlePost: action.payload };\n    \n    case LOAD_POST_TO_UPDATE:\n      return { ...statePart, postToUpdate: action.payload };\n    \n      case LOAD_POSTS_PAGE:\n      return {\n        ...statePart,\n        postsPerPage: action.payload.postsPerPage,\n        presentPage: action.payload.presentPage,\n        amount: action.payload.amount,\n        data: [...action.payload.posts],\n      };\n\n    case CLEAR_POST_TO_UPDATE:\n      return { ...statePart, postToUpdate: null };\n\n    case LIKE_POST || UNLIKE_POST:\n      return {\n        ...statePart,\n        data: statePart.data.map(post => {\n          const postCopy = {...post};\n          if (post.id === action.payload.id) {\n            postCopy.likes = action.payload.likes\n          };\n          return postCopy\n        }),\n        singlePost: {...statePart.singlePost, likes: action.payload.likes}\n      };\n\n    case START_REQUEST:\n      return { ...statePart, request: { pending: true, error: null, success: null } };\n    \n    case END_REQUEST:\n      return { ...statePart, request: { pending: false, error: null, success: true } };\n\n    case RESET_REQUEST:\n      return { ...statePart, request: { pending: false, error: null, success: null } };\n\n    case ERROR_REQUEST:\n      return { ...statePart, request: { pending: false, error: action.error, success: false } };\n    \n    default:\n      return statePart;\n  };\n};\n\n/* THUNKS */\n\nexport const loadPostsRequest = () => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      let res = await axios.get(`/api/posts`);\n      await new Promise((resolve, reject) => resolve() );\n      dispatch(loadPosts(res.data));\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\n\nexport const loadSinglePostRequest = (id, update) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n      const action = update ? loadPostToUpdate : loadSinglePost;\n      let res = await axios.get(`/api/posts/${id}`);\n      await new Promise((resolve, reject) => resolve() );\n      dispatch(action(res.data));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\nexport const addPostRequest = (post) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      await axios.post(`/api/posts`, post);\n      await new Promise((resolve, reject) => resolve() );\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\nexport const updatePostRequest = (post) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      await axios.patch(`/api/posts`, post);\n      await new Promise((resolve, reject) => resolve() );\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      const limit = postsPerPage || 10;\n      const startAt = (page - 1) * limit;\n\n      let res = await axios.get(`/api/posts/range/${startAt}/${limit}`);\n      await new Promise((resolve, reject) => resolve() );\n\n      const payload = {\n        posts: res.data.posts,\n        amount: res.data.amount,\n        postsPerPage: limit,\n        presentPage: page,\n      };\n\n      dispatch(loadPostsByPage(payload));\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\n\nexport const loadRandomPostRequest = () => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n      let res = await axios.get(`/api/posts/random`);\n      await new Promise((resolve, reject) => resolve() );\n      dispatch(loadSinglePost(res.data));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\nexport const likePostRequest = id => {\n  return async dispatch => {\n  \n    let res = await axios.put(`/api/posts/${id}/like`);\n    await new Promise((resolve, reject) => resolve());\n    dispatch(likePost({ id, likes: res.data }));\n\n  };\n};\n\nexport const unLikePostRequest = id => {\n  return async dispatch => {\n\n    let res = await axios.put(`/api/posts/${id}/unlike`);\n    await new Promise((resolve, reject) => resolve());\n    dispatch(unLikePost({ id, likes: res.data }));\n  \n  };\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n// import reducers\nimport posts from './postsRedux';\n\n// combine reducers\nconst rootReducer = combineReducers({\n  posts,\n});\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\nimport './NavBar.scss';\nimport Logo from '../../common/Logo/Logo';\nimport MainMenu from '../../layout/MainMenu/MainMenu';\n\nclass NavBar extends React.Component {\n  state = {\n    links: [\n      { path: '/', title: 'Home' },\n      { path: '/posts/new', title: 'Add post' },\n      { path: '/posts', title: 'Posts' },\n      { path: '/contact', title: 'Contact' },\n      { path: '/posts/random', title: 'Random post'}\n    ],\n  }\n\n  render() {\n    const { links } = this.state;\n\n    return (\n      <nav className='navbar'>\n        <Logo />\n        <MainMenu links={links} />\n      </nav>\n    );\n  }\n\n};\n\nexport default NavBar;","import React from 'react'\nimport PageContainer from '../PageContainer/PageContainer';\nimport NavBar from '../../features/NavBar/NavBar';\n\nconst MainLayout = ({ children }) => (\n  <div>\n    <PageContainer>\n      <NavBar />\n      {children}\n    </PageContainer>\n  </div>\n);\n\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const BASE_URL = 'http://www.localhost:3000';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst HtmlBox = ({ children, ...otherProps }) => (\n  <div {...otherProps} className=\"html-box\">\n    {ReactHtmlParser(children)}\n  </div>\n);\n\nHtmlBox.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default HtmlBox;","import React from 'react';\n\nconst PostRank = ({ likes, likePost, unLikePost }) => {\n  return (\n    <div className=\"post-rank\">\n      <button className=\"button button--primary\" onClick={ unLikePost }>-</button>\n      <span className=\"likes\">{likes}</span>\n      <button className=\"button button--primary\" onClick={ likePost }>+</button>\n    </div>\n  );\n};\n\nexport default PostRank;\n","import { connect } from 'react-redux';\nimport { likePostRequest, unLikePostRequest } from '../../../redux/postsRedux';\nimport PostRank from './PostRank';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  likePost: () => dispatch(likePostRequest(ownProps.id)),\n  unLikePost: () => dispatch(unLikePostRequest(ownProps.id)),\n});\n\nexport default connect(null, mapDispatchToProps)(PostRank);","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FacebookProvider, ShareButton } from 'react-facebook'\nimport { BASE_URL } from '../../../config';\n\nimport Button from '../../common/Button/Button';\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\nimport PostRank from '../PostRank/PostRankContainer';\n\nimport './PostSummary.scss';\n\nconst PostSummary = ({ id, title, content, author, location, likes }) => (\n  <article className=\"post-summary\">\n    <SmallTitle>{title}</SmallTitle>\n    <FacebookProvider appId=\"727203911061100\">\n      <ShareButton href={`${BASE_URL}${location.pathname}`}>\n        Share\n      </ShareButton>\n    </FacebookProvider>\n    <PostRank id={id} likes={likes} />\n    <p>Author: {author}</p>\n    <HtmlBox>{content}</HtmlBox>\n    <Link to={`/posts/${id}`}>\n      <Button variant=\"primary\">\n        Read more\n      </Button>\n    </Link>\n    <Link to={`/posts/edit/${id}`}>\n      <Button variant=\"primary\">\n        Update post\n      </Button>\n    </Link>\n  </article>\n);\n\nPostSummary.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  content: PropTypes.string,\n  author: PropTypes.string.isRequired\n};\n\nexport default withRouter(props => <PostSummary {...props} />);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport PostSummary from '../PostSummary/PostSummary';\n\nconst PostsList = ({ posts }) => (\n  <div>\n    <section className=\"posts-list\">\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\n    </section>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired\n    })\n  ),\n};\n\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n\n\nclass Pagination extends React.Component {\n\n  changePage = (newPage) => {\n    const { onPageChange } = this.props;\n\n    onPageChange(newPage);\n  }\n\n  renderNavButton = (type) => {\n    const { pages, page } = this.props;\n\n    const newPage = type === 'prev' ? page - 1 : page + 1;\n    const content = type === 'prev' ? '<' : '>';\n\n    const button = <div className='pagination__list__item' onClick={() => this.changePage(newPage)}>{content}</div>;\n\n    if (type === 'prev' && page !== 1) return button;\n    if (type === 'next' && page !== pages && pages > 1) return button;\n    return null;\n  }\n\n  render() {\n\n    const { pages, page } = this.props;\n    const { changePage } = this;\n\n    return (\n      <div className=\"pagination\">\n        <ul className=\"pagination__list\">\n\n          {this.renderNavButton('prev')}\n\n          {[...Array(pages)].map((el, pageNum) =>\n            <li\n              key={++pageNum}\n              onClick={() => { changePage(pageNum) }}\n              className={`pagination__list__item${((page) === pageNum) ? ' pagination__list__item--active' : ''}`}>\n              {pageNum}\n            </li>\n          )}\n\n          {this.renderNavButton('next')}\n\n        </ul>\n      </div>\n    );\n  }\n\n}\n\nPagination.propTypes = {\n  pages: PropTypes.number.isRequired,\n  initialPage: PropTypes.number,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport PostsList from '../PostsList/PostsList';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport Pagination from '../../common/Pagination/Pagination';\n\nclass Posts extends React.Component {\n  state = {\n    presentPage: this.props.initialPage || 1,\n    postsPerPage: this.props.postsPerPage || 10,\n    pagination: this.props.pagination !== undefined\n      ? \n        this.props.pagination\n      :\n        true\n  }\n\n  componentDidMount() { \n    const { loadPostsByPage } = this.props;\n    const { presentPage, postsPerPage } = this.state;\n\n    loadPostsByPage(presentPage, postsPerPage);\n  }\n\n  loadPostsPage = (page) => {\n    const { loadPostsByPage } = this.props;\n    const { postsPerPage } = this.state;\n\n    this.setState({ presentPage: page });\n    loadPostsByPage(page, postsPerPage);\n  }\n\n  renderContent() {\n\n    const { pending, error, success } = this.props.request;\n    const { posts } = this.props;\n    const { presentPage, pagination } = this.state;\n    switch (true) {\n\n      case !pending && success && posts.length > 0: \n        return (\n          <>\n            <PostsList posts={posts} />\n            { pagination \n              ?\n                <Pagination pages={this.props.pages} onPageChange={this.loadPostsPage} page={presentPage}/>\n              : \n                null\n            }\n          </>\n        )\n\n      case pending && !success:\n        return <Spinner />;\n\n      case !pending && error:\n        return <Alert variant='error'>{error}</Alert>;\n\n      case !pending && success && posts.length === 0:\n        return <Alert variant='info'>No posts...</Alert>;\n\n      default:\n        return null;\n        \n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderContent()}\n        \n      </div>\n    );\n  };\n\n};\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired\n    })\n  ),\n  loadPostsByPage: PropTypes.func.isRequired,\n  postsPerPage: PropTypes.number,\n};\n\nexport default Posts;","import { connect } from 'react-redux';\nimport { getPosts, getRequest, loadPostsByPageRequest, getPages } from '../../../redux/postsRedux';\nimport Posts from './Posts';\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n  request: getRequest(state),\n  pages: getPages(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst HomePage = () => (\n  <div>\n    <PageTitle>Blog</PageTitle>\n    <Posts postsPerPage={3} pagination={false} />\n  </div>\n);\n\nexport default HomePage;","import React from 'react';\n\nclass PostsCounter extends React.Component {\n\n  render() {\n    const { postsCount } = this.props;\n\n    return (\n      <div>{postsCount ? `Posts amount: ${postsCount}` : '' }</div>\n    );\n  }\n\n};\n\nexport default PostsCounter;\n","import { connect } from 'react-redux';\nimport { getPostsCount } from '../../../redux/postsRedux';\nimport PostsCounter from './PostsCounter';\n\nconst mapStateToProps = state => ({\n  postsCount: getPostsCount(state)\n});\n\nexport default connect(mapStateToProps)(PostsCounter);","import React from 'react';\n\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostsCounter from '../../features/PostsCounter/PostCounterContainer';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst PostsPage = () => (\n  <div>\n    <PageTitle>Posts list</PageTitle>\n    <PostsCounter />\n    <Posts />\n  </div>\n);\n\nexport default PostsPage;","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst ContactPage = () => (\n  <div>\n    <PageTitle>Kontakt</PageTitle>\n    <p>Your Favourite Blooger Ltd.</p>\n    <p>9432 Division Street</p>\n    <p>Stone Mountain, GA 30083</p>\n    <br/>\n    <p>Mobile Number: 207-914-3411</p>\n  </div>\n);\n\nexport default ContactPage;","import React from 'react';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>404 Not Found</h1>\n  </div>\n);\n\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { FacebookProvider, Comments } from 'react-facebook';\nimport { withRouter } from 'react-router-dom';\nimport { BASE_URL } from '../../../config';\nimport PostSummary from '../../features/PostSummary/PostSummary';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\n\nclass SinglePost extends Component {\n\n  componentDidMount() {\n    const { random, loadSinglePost, loadRandomPost } = this.props;\n    if (random) return loadRandomPost();\n    loadSinglePost();\n  }\n\n  renderContent() {\n    const { pending, error, success } = this.props.request;\n    const { singlePost, location } = this.props;\n\n    switch (true) {\n\n      case !pending && success && singlePost !== null:\n        return (\n          <>\n            <PostSummary {...singlePost} />\n            <FacebookProvider appId=\"727203911061100\">\n              <Comments href={`${BASE_URL}${location.pathname}`} />\n            </FacebookProvider>\n          </>\n        );\n\n      case pending && !success:\n        return <Spinner />;\n\n      case !pending && error:\n        return <Alert variant='error'>{error}</Alert>;\n\n      default:\n        return null;\n\n    }\n  }\n\n  render() {\n    return(\n      <div>{ this.renderContent() }</div>\n    );\n  } \n};\n\nPostSummary.propTypes = {\n  singlePost: PropTypes.object,\n  request: PropTypes.object,\n  loadSinglePost: PropTypes.func\n};\n\nexport default withRouter(props => <SinglePost {...props} />);\n","import { connect } from 'react-redux';\nimport { getSinglePost, loadSinglePostRequest, getRequest, loadRandomPostRequest } from '../../../redux/postsRedux';\nimport SinglePost from './SinglePost';\n\nconst mapStateToProps = state => ({\n  singlePost: getSinglePost(state),\n  request: getRequest(state)\n}); \n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  loadSinglePost: () => dispatch(loadSinglePostRequest( ownProps.id )),\n  loadRandomPost: () => dispatch(loadRandomPostRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\n\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\n\nconst PostPage = ({ match }) => {\n  const { id } = match.params;\n\n  return (\n    <div>\n      <SinglePost id={id} />\n    </div>\n  );\n};\n\nexport default PostPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport Editor from 'react-medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\n\nimport TextField from '../../common/TextField/TextField';\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\nimport Button from '../../common/Button/Button';\nimport Alert from '../../common/Alert/Alert';\nimport Spinner from '../../common/Spinner/Spinner';\n\nimport './PostForm.scss';\n\nclass PostForm extends React.Component {\n\n  state = {\n    post: {\n      title: '',\n      author: '',\n      content: ''\n    }\n  }\n\n  async componentDidMount () {\n    const {loadPost, resetRequest, isUpdate, id } = this.props\n    \n    if(isUpdate) {\n      await loadPost(id)\n      resetRequest();\n\n      this.setState({post: this.props.post});\n    } else {\n      resetRequest();\n    };\n  };\n  \n  handleChange = (e) => {\n    const { post } = this.state;\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } })\n  }\n\n  handleEditor = (text) => {\n    const { post } = this.state;\n    this.setState({ post: { ...post, content: text } })\n  }\n\n  sendPost = (e) => {\n    const { addPost, updatePost, isUpdate } = this.props;\n    const { post } = this.state;\n\n    const callback = isUpdate ? updatePost : addPost;\n\n    e.preventDefault();\n    callback(post);\n  }\n\n  render() {\n\n    const { post } = this.state;\n    const { handleChange, handleEditor, sendPost } = this;\n    const { request, isUpdate } = this.props;\n\n    if (request.error) return <Alert variant=\"error\">{request.error}</Alert>\n    else if (request.success) return <Alert variant=\"success\">{`Post has been ${isUpdate ? \"updated\" : \"added\"}!`}</Alert>\n    else if (request.pending) return <Spinner />\n    else return (\n      <form onSubmit={sendPost}>\n\n        <TextField\n          label=\"Title\"\n          value={post.title}\n          onChange={handleChange}\n          name=\"title\"\n        />\n\n        <TextField\n          label=\"Author\"\n          value={post.author}\n          onChange={handleChange}\n          name=\"author\"\n        />\n\n        <SectionTitle>Edit post content</SectionTitle>\n\n        <Editor\n          className=\"content-editor\"\n          text={post.content}\n          onChange={handleEditor}\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\n        />\n\n        <Button variant=\"primary\">{isUpdate? \"Update\" : \"Add\"} post</Button>\n\n      </form>\n    );\n  }\n};\n\nPostForm.propTypes = {\n  request: PropTypes.object.isRequired,\n  addPost: PropTypes.func.isRequired,\n  updatePost: PropTypes.func.isRequired,\n  isUpdate: PropTypes.bool\n};\n\nexport default PostForm;","import { connect } from 'react-redux';\nimport { getRequest, addPostRequest, resetRequest, updatePostRequest,  loadSinglePostRequest, getPostToUpdate } from '../../../redux/postsRedux';\nimport PostForm from './PostForm';\n\nconst mapStateToProps = (state) => ({\n  request: getRequest(state),\n  post: getPostToUpdate(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: (post) => dispatch(addPostRequest(post)),\n  updatePost: (post) => dispatch(updatePostRequest(post)),\n  resetRequest: () => dispatch(resetRequest()),\n  loadPost: (id) => dispatch(loadSinglePostRequest(id, true)),\n  // clearUpdatePost: () => dispatch(clearSinglePost())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\nimport PostForm from '../../features/PostForm/PostFormContainer';\n\nconst AddPost = () => (\n  <div>\n    <PostForm/>\n  </div>\n);\n\nexport default AddPost;","import React from 'react';\nimport PostForm from '../../features/PostForm/PostFormContainer';\n\nconst UpdatePost = ({ match }) => (\n  <div>\n    <PostForm isUpdate={true} id={match.params.id}/>\n  </div>\n);\n\nexport default UpdatePost;","import React from 'react';\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\n\nconst RandomPost = ({ match }) => (\n  <div>\n    <SinglePost random={true} />\n  </div>\n);\n\nexport default RandomPost;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n// import routes\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\nimport Post from './components/pages/Post/PostPage';\nimport AddPost from './components/pages/AddPost/AddPost';\nimport UpdatePost from './components/pages/UpdatePost/UpdatePost';\nimport RandomPost from './components/pages/RandomPost/RandomPost';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/posts\" exact component={Posts} />\n          <Route path=\"/contact\" exact component={Contact} />\n          <Route path=\"/posts/new\" exact component={AddPost} />\n          <Route path=\"/posts/random\" exact component={RandomPost} />\n          <Route path=\"/posts/:id\" exact component={Post} />\n          <Route path=\"/posts/edit/:id\" exact component={UpdatePost} />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    );\n  }\n\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));"],"sourceRoot":""}