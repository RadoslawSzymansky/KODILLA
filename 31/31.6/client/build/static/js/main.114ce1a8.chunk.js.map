{"version":3,"sources":["config.js","redux/postsRedux.js","redux/store.js","components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/Post/PostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPost.js","components/pages/UpdatePost/UpdatePost.js","components/pages/RandomPost/RandomPost.js","App.js","index.js"],"names":["API_URL","BASE_URL","createActionName","name","concat","LOAD_POSTS","LOAD_SINGLE_POST","LOAD_POST_TO_UPDATE","CLEAR_POST_TO_UPDATE","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","LOAD_POSTS_PAGE","getRequest","_ref3","posts","request","getPages","_ref6","Math","ceil","amount","postsPerPage","startRequest","type","loadSinglePost","payload","loadPostToUpdate","endRequest","errorRequest","error","loadPostsByPage","initialState","data","pending","success","singlePost","postToUpdate","presentPage","loadSinglePostRequest","id","update","_ref8","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","action","res","wrap","_context2","prev","next","axios","get","sent","Promise","resolve","reject","t0","message","stop","_x2","apply","this","arguments","rootReducer","combineReducers","statePart","length","undefined","objectSpread","toConsumableArray","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","PageContainer","_ref","children","react_default","createElement","className","Logo","links","location","MainMenu","map","link","index","key","react_router_dom","pathname","path","to","title","withRouter","props","MainMenu_MainMenu_MainMenu","NavBar","state","common_Logo_Logo","layout_MainMenu_MainMenu","React","Component","MainLayout","layout_PageContainer_PageContainer","features_NavBar_NavBar","PageTitle","Button","_ref$variant","variant","otherProps","objectWithoutProperties","assign","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","content","author","common_SmallTitle_SmallTitle","lib","appId","href","common_HtmlBox_HtmlBox","common_Button_Button","PostSummary_PostSummary_PostSummary","PostsList","post","features_PostSummary_PostSummary","Spinner","react_animated_css_lib","animationIn","animationOut","Alert","index_esm","icon","Pagination","changePage","newPage","onPageChange","_this","renderNavButton","_this$props","pages","page","button","onClick","_this$props2","Array","el","pageNum","Posts","initialPage","pagination","loadPostsPage","setState","_this$state","_this$props$request","_this$state2","Fragment","features_PostsList_PostsList","common_Pagination_Pagination","common_Spinner_Spinner","common_Alert_Alert","renderContent","connect","_ref11","_callee5","limit","startAt","_context5","_x5","loadPostsByPageRequest","HomePage","common_PageTitle_PageTitle","PostsContainer","PostsCounter","postsCount","_ref2","PostsPage","PostCounterContainer","ContactPage","NotFoundPage","SinglePost","random","loadRandomPost","propTypes","PropTypes","object","func","SinglePost_SinglePost","_ref4","ownProps","_ref12","_callee6","_context6","_x6","PostPage","match","params","SinglePostContainer","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","defineProperty","target","handleEditor","text","sendPost","addPost","updatePost","isUpdate","callback","preventDefault","loadPost","resetRequest","_this$props3","onSubmit","common_TextField_TextField","common_SectionTitle_SectionTitle","react_medium_editor_default","options","placeholder","toolbar","buttons","_ref5","_ref9","_callee3","_context3","_x3","addPostRequest","_ref10","_callee4","_context4","patch","_x4","updatePostRequest","AddPost","PostFormContainer","UpdatePost","RandomPost","App","layout_MainLayout_MainLayout","react_router","exact","component","Home","Contact","Post","NotFound","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"omBAAaA,EAAU,4BACVC,EAAW,4BCIlBC,EAAmB,SAAAC,GAAI,aAAAC,OADT,QACS,KAAAA,OAA0BD,IAE1CE,EAAaH,EAAiB,cAC9BI,EAAmBJ,EAAiB,oBACpCK,EAAsBL,EAAiB,uBACvCM,EAAuBN,EAAiB,qBACxCO,EAAgBP,EAAiB,iBACjCQ,EAAcR,EAAiB,eAC/BS,EAAgBT,EAAiB,iBACjCU,EAAgBV,EAAiB,iBACjCW,EAAkBX,EAAiB,mBAMnCY,EAAa,SAAAC,GAAA,OAAAA,EAAGC,MAAkBC,SAGlCC,EAAW,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,MAAH,OAAeI,KAAKC,KAAKL,EAAMM,OAASN,EAAMO,eAIzDC,EAAe,iBAAO,CAAEC,KAAMhB,IAE9BiB,EAAiB,SAAAC,GAAO,MAAK,CAAEA,UAASF,KAAMnB,IAC9CsB,EAAmB,SAAAD,GAAO,MAAK,CAAEA,UAASF,KAAMlB,IAEhDsB,EAAa,iBAAO,CAAEJ,KAAMf,IAC5BoB,EAAe,SAAAC,GAAK,MAAK,CAAEA,QAAON,KAAMd,IAExCqB,EAAkB,SAAAL,GAAO,MAAK,CAAEA,UAASF,KAAMZ,IAItDoB,EAAe,CACnBC,KAAM,GACNjB,QAAS,CACPkB,SAAS,EACTJ,MAAO,KACPK,QAAS,MAEXC,WAAY,KACZC,aAAc,KACdhB,OAAQ,EACRC,aAAc,GACdgB,YAAa,GAgDR,IAmBMC,EAAwB,SAACC,EAAIC,GACxC,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAELN,EAAS1B,KAFJ8B,EAAAC,KAAA,EAIGJ,EAAST,EAASd,EAAmBF,EAJxC4B,EAAAE,KAAA,EAKaC,IAAMC,IAAN,GAAAtD,OAAaJ,EAAb,WAAAI,OAA8BqC,IAL3C,cAKCW,EALDE,EAAAK,KAAAL,EAAAE,KAAA,EAMG,IAAII,QAAQ,SAACC,EAASC,GAAV,OAAqBD,GAAS,KAN7C,OAOHX,EAASC,EAAOC,EAAIlB,OACpBgB,EAASrB,KARNyB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAUHJ,EAASpB,EAAawB,EAAAS,GAAEC,UAVrB,yBAAAV,EAAAW,SAAAhB,EAAA,kBAAP,gBAAAiB,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,IChHIC,EAAcC,YAAgB,CAClCvD,MDgDa,WAAwD,IAAvCwD,EAAuCH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA3BpC,EAAckB,EAAakB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAJ,GACjE,OAAQlB,EAAO1B,MAEb,KAAKpB,EACH,OAAOuC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBtC,KAAMiB,EAAOxB,UAEtC,KAAKrB,EACH,OAAOsC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBnC,WAAYc,EAAOxB,UAE5C,KAAKpB,EACH,OAAOqC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBlC,aAAca,EAAOxB,UAE5C,KAAKd,EACL,OAAO+B,OAAA+B,EAAA,EAAA/B,CAAA,GACF4B,EADL,CAEEjD,aAAc4B,EAAOxB,QAAQJ,aAC7BgB,YAAaY,EAAOxB,QAAQY,YAC5BjB,OAAQ6B,EAAOxB,QAAQL,OACvBY,KAAKU,OAAAgC,EAAA,EAAAhC,CAAKO,EAAOxB,QAAQX,SAG7B,KAAKR,EACH,OAAOoC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBlC,aAAc,OAEvC,KAAK7B,EACH,OAAOmC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBvD,QAAS,CAAEkB,SAAS,EAAMJ,MAAO,KAAMK,QAAS,QAEzE,KAAK1B,EACH,OAAOkC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBvD,QAAS,CAAEkB,SAAS,EAAOJ,MAAO,KAAMK,SAAS,KAE1E,KAAKxB,EACH,OAAOgC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBvD,QAAS,CAAEkB,SAAS,EAAOJ,MAAO,KAAMK,QAAS,QAE1E,KAAKzB,EACH,OAAOiC,OAAA+B,EAAA,EAAA/B,CAAA,GAAK4B,EAAZ,CAAuBvD,QAAS,CAAEkB,SAAS,EAAOJ,MAAOoB,EAAOpB,MAAOK,SAAS,KAElF,QACE,OAAOoC,MC3EEK,EAPDC,YACZR,EACAS,YACEC,YAAgBC,KAChBC,OAAOC,8BAAgCD,OAAOC,gFCAnCC,UAVO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACpBC,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,mBACZH,KCCUI,iBAJF,SAAAL,KAAGM,MAAHN,EAAUO,SAAV,OACXL,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,QAAd,cCCII,UAAW,SAAAR,GAAA,IAAGM,EAAHN,EAAGM,MAAOC,EAAVP,EAAUO,SAAV,OACfL,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,aACVE,EAAMG,IAAI,SAACC,EAAMC,GAAP,OACVT,EAAAxC,EAAAyC,cAAA,MAAIS,IAAKD,GACPT,EAAAxC,EAAAyC,cAACU,EAAA,EAAD,CAAMT,UAAYG,EAASO,WAAaJ,EAAKK,KAAQ,SAAa,GAAIC,GAAIN,EAAKK,MAAOL,EAAKO,aAapFC,cAAW,SAAAC,GAAK,OAAIjB,EAAAxC,EAAAyC,cAACiB,EAAaD,KCMlCE,6MAvBbC,MAAQ,CACNhB,MAAO,CACL,CAAES,KAAM,IAAKE,MAAO,QACpB,CAAEF,KAAM,aAAcE,MAAO,YAC7B,CAAEF,KAAM,SAAUE,MAAO,SACzB,CAAEF,KAAM,WAAYE,MAAO,WAC3B,CAAEF,KAAM,gBAAiBE,MAAO,yFAI3B,IACCX,EAAUvB,KAAKuC,MAAfhB,MAER,OACEJ,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,UACbF,EAAAxC,EAAAyC,cAACoB,EAAD,MACArB,EAAAxC,EAAAyC,cAACqB,EAAD,CAAUlB,MAAOA,YAjBJmB,IAAMC,WCQZC,EATI,SAAA3B,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACjBC,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACyB,EAAD,KACE1B,EAAAxC,EAAAyC,cAAC0B,EAAD,MACC5B,KCOQ6B,WAVG,SAAA9B,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAChBC,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,cACVH,uBCQS8B,WAVA,SAAA/B,GAAA,IAAAgC,EAAAhC,EAAGiC,eAAH,IAAAD,EAAa,GAAbA,EAAiB/B,EAAjBD,EAAiBC,SAAaiC,EAA9B3E,OAAA4E,GAAA,EAAA5E,CAAAyC,EAAA,+BACbE,EAAAxC,EAAAyC,cAAA,SAAA5C,OAAA6E,OAAA,GAAaF,EAAb,CAA0B9B,UAAS,kBAAArF,OAAqBkH,KACpDhC,KCOSoC,WAVI,SAAArC,GAAA,IAAGC,EAAHD,EAAGC,SAAaiC,EAAhB3E,OAAA4E,GAAA,EAAA5E,CAAAyC,EAAA,qBACjBE,EAAAxC,EAAAyC,cAAA,KAAA5C,OAAA6E,OAAA,GAAQF,EAAR,CAAoB9B,UAAU,gBAC1BH,0BCQSqC,GAVC,SAAAtC,GAAA,IAAGC,EAAHD,EAAGC,SAAaiC,EAAhB3E,OAAA4E,GAAA,EAAA5E,CAAAyC,EAAA,qBACdE,EAAAxC,EAAAyC,cAAA,MAAA5C,OAAA6E,OAAA,GAASF,EAAT,CAAqB9B,UAAU,aAC5BmC,KAAgBtC,KCMfuC,WAAc,SAAAxC,GAAA,IAAG5C,EAAH4C,EAAG5C,GAAI6D,EAAPjB,EAAOiB,MAAOwB,EAAdzC,EAAcyC,QAASC,EAAvB1C,EAAuB0C,OAAQnC,EAA/BP,EAA+BO,SAA/B,OAClBL,EAAAxC,EAAAyC,cAAA,WAASC,UAAU,gBACjBF,EAAAxC,EAAAyC,cAACwC,GAAD,KAAa1B,GACbf,EAAAxC,EAAAyC,cAACyC,GAAA,iBAAD,CAAkBC,MAAM,mBACtB3C,EAAAxC,EAAAyC,cAACyC,GAAA,YAAD,CAAaE,KAAI,GAAA/H,OAAKH,GAALG,OAAgBwF,EAASO,WAA1C,UAIFZ,EAAAxC,EAAAyC,cAAA,oBAAYuC,GACZxC,EAAAxC,EAAAyC,cAAC4C,GAAD,KAAUN,GACVvC,EAAAxC,EAAAyC,cAACU,EAAA,EAAD,CAAMG,GAAE,UAAAjG,OAAYqC,IAClB8C,EAAAxC,EAAAyC,cAAC6C,GAAD,CAAQf,QAAQ,WAAhB,cAIF/B,EAAAxC,EAAAyC,cAACU,EAAA,EAAD,CAAMG,GAAE,eAAAjG,OAAiBqC,IACvB8C,EAAAxC,EAAAyC,cAAC6C,GAAD,CAAQf,QAAQ,WAAhB,mBAcSf,eAAW,SAAAC,GAAK,OAAIjB,EAAAxC,EAAAyC,cAAC8C,GAAgB9B,KClBrC+B,GAnBG,SAAAlD,GAAA,IAAGrE,EAAHqE,EAAGrE,MAAH,OAChBuE,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,WAASC,UAAU,cAChBzE,EAAM8E,IAAI,SAAA0C,GAAI,OAAIjD,EAAAxC,EAAAyC,cAACiD,GAAD7F,OAAA6E,OAAA,CAAaxB,IAAKuC,EAAK/F,IAAQ+F,kBCQzCE,WAXC,kBACdnD,EAAAxC,EAAAyC,cAACmD,GAAA,SAAD,CAAUC,YAAY,SAASC,aAAa,WAC1CtD,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,gBACbF,EAAAxC,EAAAyC,cAAA,YACAD,EAAAxC,EAAAyC,cAAA,YACAD,EAAAxC,EAAAyC,cAAA,YACAD,EAAAxC,EAAAyC,cAAA,yBC6BSsD,WAjCD,SAAAzD,GAA+C,IAAAgC,EAAAhC,EAA5CiC,eAA4C,IAAAD,EAAlC,GAAkCA,EAA9B/B,EAA8BD,EAA9BC,SAAaiC,EAAiB3E,OAAA4E,GAAA,EAAA5E,CAAAyC,EAAA,wBAiB3D,OACEE,EAAAxC,EAAAyC,cAACmD,GAAA,SAAD,CAAUC,YAAY,SAASC,aAAa,WAC1CtD,EAAAxC,EAAAyC,cAAA,MAAA5C,OAAA6E,OAAA,GAASF,EAAT,CAAqB9B,UAAS,gBAAArF,OAAkBkH,KAjBvC,WACX,OAAOA,GACL,IAAK,OACH,OAAO/B,EAAAxC,EAAAyC,cAACuD,GAAA,EAAD,MACT,IAAK,UACH,OAAOxD,EAAAxC,EAAAyC,cAACuD,GAAA,EAAD,MACT,IAAK,UAEL,IAAK,QACH,OAAOxD,EAAAxC,EAAAyC,cAACuD,GAAA,EAAD,MACT,QACE,OAAOxD,EAAAxC,EAAAyC,cAACuD,GAAA,EAAD,OAONC,GACDzD,EAAAxC,EAAAyC,cAAA,QAAMC,UAAU,eAAeH,OCiCxB2D,sNAtDbC,WAAa,SAACC,IAGZC,EAFyBC,EAAK7C,MAAtB4C,cAEKD,MAGfG,gBAAkB,SAAC7H,GAAS,IAAA8H,EACFF,EAAK7C,MAArBgD,EADkBD,EAClBC,MAAOC,EADWF,EACXE,KAETN,EAAmB,SAAT1H,EAAkBgI,EAAO,EAAIA,EAAO,EAC9C3B,EAAmB,SAATrG,EAAkB,IAAM,IAElCiI,EAASnE,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,yBAAyBkE,QAAS,kBAAMN,EAAKH,WAAWC,KAAWrB,GAEjG,MAAa,SAATrG,GAA4B,IAATgI,EAAmBC,EAC7B,SAATjI,GAAmBgI,IAASD,GAASA,EAAQ,EAAUE,EACpD,8EAGA,IAAAE,EAEiBxF,KAAKoC,MAArBgD,EAFDI,EAECJ,MAAOC,EAFRG,EAEQH,KACPP,EAAe9E,KAAf8E,WAER,OACE3D,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,cACbF,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,oBAEXrB,KAAKkF,gBAAgB,QAErB1G,OAAAgC,EAAA,EAAAhC,CAAIiH,MAAML,IAAQ1D,IAAI,SAACgE,EAAIC,GAAL,OACrBxE,EAAAxC,EAAAyC,cAAA,MACES,MAAO8D,EACPJ,QAAS,WAAQT,EAAWa,IAC5BtE,UAAS,yBAAArF,OAA6BqJ,IAAUM,EAAW,kCAAoC,KAC9FA,KAIJ3F,KAAKkF,gBAAgB,iBAzCPxC,IAAMC,YCwFhBiD,8MApFbrD,MAAQ,CACNpE,YAAa8G,EAAK7C,MAAMyD,aAAe,EACvC1I,aAAc8H,EAAK7C,MAAMjF,cAAgB,GACzC2I,gBAAsCxF,IAA1B2E,EAAK7C,MAAM0D,YAEnBb,EAAK7C,MAAM0D,cAYjBC,cAAgB,SAACV,GAAS,IAChBzH,EAAoBqH,EAAK7C,MAAzBxE,gBACAT,EAAiB8H,EAAK1C,MAAtBpF,aAER8H,EAAKe,SAAS,CAAE7H,YAAakH,IAC7BzH,EAAgByH,EAAMlI,uFAZJ,IACVS,EAAoBoC,KAAKoC,MAAzBxE,gBADUqI,EAEoBjG,KAAKuC,MAE3C3E,EAJkBqI,EAEV9H,YAFU8H,EAEG9I,sDAaP,IAAA+I,EAEsBlG,KAAKoC,MAAMvF,QAAvCkB,EAFMmI,EAENnI,QAASJ,EAFHuI,EAEGvI,MAAOK,EAFVkI,EAEUlI,QAChBpB,EAAUoD,KAAKoC,MAAfxF,MAHMuJ,EAIsBnG,KAAKuC,MAAjCpE,EAJMgI,EAINhI,YAAa2H,EAJPK,EAIOL,WACrB,QAAQ,GAEN,KAAM/H,GAAWC,GAAWpB,EAAMyD,OAAS,EACzC,OACEc,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAAyH,SAAA,KACEjF,EAAAxC,EAAAyC,cAACiF,GAAD,CAAWzJ,MAAOA,IAChBkJ,EAEE3E,EAAAxC,EAAAyC,cAACkF,GAAD,CAAYlB,MAAOpF,KAAKoC,MAAMgD,MAAOJ,aAAchF,KAAK+F,cAAeV,KAAMlH,IAE7E,MAKV,KAAKJ,IAAYC,EACf,OAAOmD,EAAAxC,EAAAyC,cAACmF,GAAD,MAET,KAAMxI,GAAWJ,EACf,OAAOwD,EAAAxC,EAAAyC,cAACoF,GAAD,CAAOtD,QAAQ,SAASvF,GAEjC,KAAMI,GAAWC,GAA4B,IAAjBpB,EAAMyD,OAChC,OAAOc,EAAAxC,EAAAyC,cAACoF,GAAD,CAAOtD,QAAQ,QAAf,eAET,QACE,OAAO,uCAMX,OACE/B,EAAAxC,EAAAyC,cAAA,WACGpB,KAAKyG,wBAhEM/D,IAAMC,WCMX+D,eAVS,SAAAnE,GAAK,MAAK,CAChC3F,OjBcsBqE,EiBdNsB,EjBcMtB,EAAGrE,MAAkBkB,MiBb3CjB,QAASH,EAAW6F,GACpB6C,MAAOtI,EAASyF,IjBYM,IAAAtB,GiBTG,SAAAnC,GAAQ,MAAK,CACtClB,gBAAiB,SAACyH,EAAMlI,GAAP,OAAwB2B,EjB8JL,SAACuG,EAAMlI,GAC3C,sBAAAwJ,EAAAnI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAgI,EAAM9H,GAAN,IAAA+H,EAAAC,EAAA9H,EAAAzB,EAAA,OAAAmB,EAAAC,EAAAM,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAELN,EAAS1B,KAFJ2J,EAAA5H,KAAA,EAMG2H,GAAWzB,EAAO,IADlBwB,EAAQ1J,GAAgB,IAL3B4J,EAAA3H,KAAA,EAQaC,IAAMC,IAAN,GAAAtD,OAAaJ,EAAb,iBAAAI,OAAoC8K,EAApC,KAAA9K,OAA+C6K,IAR5D,cAQC7H,EARD+H,EAAAxH,KAAAwH,EAAA3H,KAAA,EASG,IAAII,QAAQ,SAACC,EAASC,GAAV,OAAqBD,GAAS,KAT7C,OAWGlC,EAAU,CACdX,MAAOoC,EAAIlB,KAAKlB,MAChBM,OAAQ8B,EAAIlB,KAAKZ,OACjBC,aAAc0J,EACd1I,YAAakH,GAGfvG,EAASlB,EAAgBL,IACzBuB,EAASrB,KAnBNsJ,EAAA3H,KAAA,iBAAA2H,EAAA5H,KAAA,GAAA4H,EAAApH,GAAAoH,EAAA,SAsBHjI,EAASpB,EAAaqJ,EAAApH,GAAEC,UAtBrB,yBAAAmH,EAAAlH,SAAA+G,EAAA,kBAAP,gBAAAI,GAAA,OAAAL,EAAA5G,MAAAC,KAAAC,YAAA,GiB/JkDgH,CAAuB5B,EAAMlI,OAGlEuJ,CAA6Cd,ICH7CsB,GAPE,kBACf/F,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAC+F,GAAD,aACAhG,EAAAxC,EAAAyC,cAACgG,GAAD,CAAOjK,aAAc,EAAG2I,YAAY,MCOzBuB,oLAVJ,IACCC,EAAetH,KAAKoC,MAApBkF,WAER,OACEnG,EAAAxC,EAAAyC,cAAA,WAAMkG,EAAU,iBAAAtL,OAAoBsL,GAAe,WAN9B5E,IAAMC,WCMlB+D,eAJS,SAAAnE,GAAK,MAAK,CAChC+E,YpBe2BC,EoBfDhF,EpBeCgF,EAAG3K,MAAkBkB,KAAKuC,SAA1B,IAAAkH,GoBZdb,CAAyBW,ICMzBG,GARG,kBAChBrG,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAC+F,GAAD,mBACAhG,EAAAxC,EAAAyC,cAACqG,GAAD,MACAtG,EAAAxC,EAAAyC,cAACgG,GAAD,QCIWM,GAXK,kBAClBvG,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAC+F,GAAD,gBACAhG,EAAAxC,EAAAyC,cAAA,wCACAD,EAAAxC,EAAAyC,cAAA,iCACAD,EAAAxC,EAAAyC,cAAA,qCACAD,EAAAxC,EAAAyC,cAAA,WACAD,EAAAxC,EAAAyC,cAAA,0CCFWuG,GANM,kBACnBxG,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,qCCKEwG,+LAEgB,IAAAzC,EACiCnF,KAAKoC,MAAhDyF,EADU1C,EACV0C,OAAQvK,EADE6H,EACF7H,eAAgBwK,EADd3C,EACc2C,eAChC,GAAID,EAAQ,OAAOC,IACnBxK,4CAGc,IAAA4I,EACsBlG,KAAKoC,MAAMvF,QAAvCkB,EADMmI,EACNnI,QAASJ,EADHuI,EACGvI,MAAOK,EADVkI,EACUlI,QADVwH,EAEmBxF,KAAKoC,MAA9BnE,EAFMuH,EAENvH,WAAYuD,EAFNgE,EAEMhE,SAEpB,QAAQ,GAEN,KAAMzD,GAAWC,GAA0B,OAAfC,EAC1B,OACEkD,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAAyH,SAAA,KACEjF,EAAAxC,EAAAyC,cAACiD,GAAgBpG,GACjBkD,EAAAxC,EAAAyC,cAACyC,GAAA,iBAAD,CAAkBC,MAAM,mBACtB3C,EAAAxC,EAAAyC,cAACyC,GAAA,SAAD,CAAUE,KAAI,GAAA/H,OAAKH,GAALG,OAAgBwF,EAASO,cAK/C,KAAKhE,IAAYC,EACf,OAAOmD,EAAAxC,EAAAyC,cAACmF,GAAD,MAET,KAAMxI,GAAWJ,EACf,OAAOwD,EAAAxC,EAAAyC,cAACoF,GAAD,CAAOtD,QAAQ,SAASvF,GAEjC,QACE,OAAO,uCAMX,OACEwD,EAAAxC,EAAAyC,cAAA,WAAOpB,KAAKyG,wBAtCO9D,aA2CzBc,GAAYsE,UAAY,CACtB9J,WAAY+J,aAAUC,OACtBpL,QAASmL,aAAUC,OACnB3K,eAAgB0K,aAAUE,MAGb/F,mBAAW,SAAAC,GAAK,OAAIjB,EAAAxC,EAAAyC,cAAC+G,GAAe/F,KC5CpCsE,eAVS,SAAAnE,GAAK,MAAK,CAChCtE,YzBiB2BmK,EyBjBD7F,EzBiBC6F,EAAGxL,MAAkBqB,YyBhBhDpB,QAASH,EAAW6F,IzBgBO,IAAA6F,GyBbF,SAACtJ,EAAUuJ,GAAX,MAAyB,CAClD/K,eAAgB,kBAAMwB,EAASV,EAAuBiK,EAAShK,MAC/DyJ,eAAgB,kBAAMhJ,EzB6LtB,eAAAwJ,EAAA9J,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA2J,EAAMzJ,GAAN,IAAAE,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAuJ,GAAA,cAAAA,EAAArJ,KAAAqJ,EAAApJ,MAAA,cAELN,EAAS1B,KAFJoL,EAAArJ,KAAA,EAAAqJ,EAAApJ,KAAA,EAIaC,IAAMC,IAAN,GAAAtD,OAAaJ,EAAb,kBAJb,cAICoD,EAJDwJ,EAAAjJ,KAAAiJ,EAAApJ,KAAA,EAKG,IAAII,QAAQ,SAACC,EAASC,GAAV,OAAqBD,GAAS,KAL7C,OAMHX,EAASxB,EAAe0B,EAAIlB,OAC5BgB,EAASrB,KAPN+K,EAAApJ,KAAA,iBAAAoJ,EAAArJ,KAAA,GAAAqJ,EAAA7I,GAAA6I,EAAA,SASH1J,EAASpB,EAAa8K,EAAA7I,GAAEC,UATrB,yBAAA4I,EAAA3I,SAAA0I,EAAA,kBAAP,gBAAAE,GAAA,OAAAH,EAAAvI,MAAAC,KAAAC,YAAA,OyB1LayG,CAA6CkB,ICA7Cc,GAVE,SAAAzH,GAAe,IACtB5C,EADsB4C,EAAZ0H,MACGC,OAAbvK,GAER,OACE8C,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACyH,GAAD,CAAYxK,GAAIA,oCCSPyK,yBAbG,SAAA7H,GAAA,IAAG8H,EAAH9H,EAAG8H,MAAOC,EAAV/H,EAAU+H,MAAOC,EAAjBhI,EAAiBgI,SAAa9F,EAA9B3E,OAAA4E,GAAA,EAAA5E,CAAAyC,EAAA,qCAChBE,EAAAxC,EAAAyC,cAAA,SAAOC,UAAU,cACfF,EAAAxC,EAAAyC,cAAA,QAAMC,UAAS,qBAAArF,QAAyB+M,EAAM1I,OAAS,EAAK,yBAA2B,KAAO2I,GAC9F7H,EAAAxC,EAAAyC,cAAA,QAAA5C,OAAA6E,OAAA,GAAWF,EAAX,CAAuB4F,MAAOA,EAAOE,SAAUA,EAAU5H,UAAU,0BCOxD6H,WAVM,SAAAjI,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACnBC,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,iBACVH,KCmGSiI,sNA1Fb5G,MAAQ,CACN6B,KAAM,CACJlC,MAAO,GACPyB,OAAQ,GACRD,QAAS,OAiBb0F,aAAe,SAACC,GAAM,IACZjF,EAASa,EAAK1C,MAAd6B,KACRa,EAAKe,SAAS,CAAE5B,KAAK5F,OAAA+B,EAAA,EAAA/B,CAAA,GAAM4F,EAAP5F,OAAA8K,GAAA,EAAA9K,CAAA,GAAc6K,EAAEE,OAAOxN,KAAOsN,EAAEE,OAAOR,aAG7DS,aAAe,SAACC,GAAS,IACfrF,EAASa,EAAK1C,MAAd6B,KACRa,EAAKe,SAAS,CAAE5B,KAAK5F,OAAA+B,EAAA,EAAA/B,CAAA,GAAM4F,EAAP,CAAaV,QAAS+F,SAG5CC,SAAW,SAACL,GAAM,IAAAlE,EAC0BF,EAAK7C,MAAvCuH,EADQxE,EACRwE,QAASC,EADDzE,EACCyE,WAAYC,EADb1E,EACa0E,SACrBzF,EAASa,EAAK1C,MAAd6B,KAEF0F,EAAWD,EAAWD,EAAaD,EAEzCN,EAAEU,iBACFD,EAAS1F,kNA7BuCpE,KAAKoC,MAA9C4H,aAAUC,iBAAcJ,aAAUxL,QAEtCwL,kCACKG,EAAS3L,UACf4L,IAEAjK,KAAKgG,SAAS,CAAC5B,KAAMpE,KAAKoC,MAAMgC,6BAEhC6F,+IAwBK,IAEC7F,EAASpE,KAAKuC,MAAd6B,KACAgF,EAAyCpJ,KAAzCoJ,aAAcI,EAA2BxJ,KAA3BwJ,aAAcE,EAAa1J,KAAb0J,SAH7BQ,EAIuBlK,KAAKoC,MAA3BvF,EAJDqN,EAICrN,QAASgN,EAJVK,EAIUL,SAEjB,OAAIhN,EAAQc,MAAcwD,EAAAxC,EAAAyC,cAACoF,GAAD,CAAOtD,QAAQ,SAASrG,EAAQc,OACjDd,EAAQmB,QAAgBmD,EAAAxC,EAAAyC,cAACoF,GAAD,CAAOtD,QAAQ,WAAf,iBAAAlH,OAA2C6N,EAAW,UAAY,QAAlE,MACxBhN,EAAQkB,QAAgBoD,EAAAxC,EAAAyC,cAACmF,GAAD,MAE/BpF,EAAAxC,EAAAyC,cAAA,QAAM+I,SAAUT,GAEdvI,EAAAxC,EAAAyC,cAACgJ,GAAD,CACEpB,MAAM,QACND,MAAO3E,EAAKlC,MACZ+G,SAAUG,EACVrN,KAAK,UAGPoF,EAAAxC,EAAAyC,cAACgJ,GAAD,CACEpB,MAAM,SACND,MAAO3E,EAAKT,OACZsF,SAAUG,EACVrN,KAAK,WAGPoF,EAAAxC,EAAAyC,cAACiJ,GAAD,0BAEAlJ,EAAAxC,EAAAyC,cAACkJ,GAAA3L,EAAD,CACE0C,UAAU,iBACVoI,KAAMrF,EAAKV,QACXuF,SAAUO,EACVe,QAAS,CAAEC,aAAa,EAAOC,QAAS,CAAEC,QAAS,CAAC,OAAQ,SAAU,YAAa,SAAU,KAAM,UAGrGvJ,EAAAxC,EAAAyC,cAAC6C,GAAD,CAAQf,QAAQ,WAAW2G,EAAU,SAAW,MAAhD,iBA9EenH,IAAMC,YCGd+D,eAbS,SAACnE,GAAD,MAAY,CAClC1F,QAASH,EAAW6F,GACpB6B,M9BiB6BuG,E8BjBPpI,E9BiBOoI,EAAG/N,MAAkBsB,eAArB,IAAAyM,G8BdJ,SAAA7L,GAAQ,MAAK,CACtC6K,QAAS,SAACvF,GAAD,OAAUtF,E9B6HS,SAACsF,GAC7B,sBAAAwG,EAAApM,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAiM,EAAM/L,GAAN,OAAAJ,EAAAC,EAAAM,KAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,cAELN,EAAS1B,KAFJ0N,EAAA3L,KAAA,EAAA2L,EAAA1L,KAAA,EAKGC,IAAM+E,KAAN,GAAApI,OAAcJ,EAAd,UAA+BwI,GALlC,cAAA0G,EAAA1L,KAAA,EAMG,IAAII,QAAQ,SAACC,EAASC,GAAV,OAAqBD,GAAS,KAN7C,OAOHX,EAASrB,KAPNqN,EAAA1L,KAAA,gBAAA0L,EAAA3L,KAAA,EAAA2L,EAAAnL,GAAAmL,EAAA,SAUHhM,EAASpB,EAAaoN,EAAAnL,GAAEC,UAVrB,yBAAAkL,EAAAjL,SAAAgL,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAA7K,MAAAC,KAAAC,YAAA,G8B9H4B+K,CAAe5G,KAC3CwF,WAAY,SAACxF,GAAD,OAAUtF,E9B6IS,SAACsF,GAChC,sBAAA6G,EAAAzM,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAsM,EAAMpM,GAAN,OAAAJ,EAAAC,EAAAM,KAAA,SAAAkM,GAAA,cAAAA,EAAAhM,KAAAgM,EAAA/L,MAAA,cAELN,EAAS1B,KAFJ+N,EAAAhM,KAAA,EAAAgM,EAAA/L,KAAA,EAKGC,IAAM+L,MAAN,GAAApP,OAAeJ,EAAf,UAAgCwI,GALnC,cAAA+G,EAAA/L,KAAA,EAMG,IAAII,QAAQ,SAACC,EAASC,GAAV,OAAqBD,GAAS,KAN7C,OAOHX,EAASrB,KAPN0N,EAAA/L,KAAA,gBAAA+L,EAAAhM,KAAA,EAAAgM,EAAAxL,GAAAwL,EAAA,SAUHrM,EAASpB,EAAayN,EAAAxL,GAAEC,UAVrB,yBAAAuL,EAAAtL,SAAAqL,EAAA,iBAAP,gBAAAG,GAAA,OAAAJ,EAAAlL,MAAAC,KAAAC,YAAA,G8B9I+BqL,CAAkBlH,KACjD6F,aAAc,kBAAMnL,E9BuBa,CAAEzB,KAAMb,K8BtBzCwN,SAAU,SAAC3L,GAAD,OAAQS,EAASV,EAAsBC,GAAI,OAIxCqI,CAA6CyC,ICR7CoC,GANC,kBACdpK,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACoK,GAAD,QCIWC,GANI,SAAAxK,GAAA,IAAG0H,EAAH1H,EAAG0H,MAAH,OACjBxH,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACoK,GAAD,CAAU3B,UAAU,EAAMxL,GAAIsK,EAAMC,OAAOvK,OCIhCqN,GANI,SAAAzK,KAAG0H,MAAH,OACjBxH,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACyH,GAAD,CAAYhB,QAAQ,MC+BT8D,oLAlBX,OACExK,EAAAxC,EAAAyC,cAACwK,EAAD,KACEzK,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,KACE1K,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAO7J,KAAK,IAAI8J,OAAK,EAACC,UAAWC,KACjC7K,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAO7J,KAAK,SAAS8J,OAAK,EAACC,UAAWnG,KACtCzE,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAO7J,KAAK,WAAW8J,OAAK,EAACC,UAAWE,KACxC9K,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAO7J,KAAK,aAAa8J,OAAK,EAACC,UAAWR,KAC1CpK,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAO7J,KAAK,gBAAgB8J,OAAK,EAACC,UAAWL,KAC7CvK,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAO7J,KAAK,aAAa8J,OAAK,EAACC,UAAWG,KAC1C/K,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAO7J,KAAK,kBAAkB8J,OAAK,EAACC,UAAWN,KAC/CtK,EAAAxC,EAAAyC,cAACyK,EAAA,EAAD,CAAOE,UAAWI,cAbVzJ,IAAMC,yBCIxByJ,IAASC,OAAOlL,EAAAxC,EAAAyC,cARH,kBACXD,EAAAxC,EAAAyC,cAACkL,EAAA,EAAD,CAAU7L,MAAOA,GACfU,EAAAxC,EAAAyC,cAACU,EAAA,EAAD,KACEX,EAAAxC,EAAAyC,cAACmL,GAAD,SAKU,MAAUC,SAASC,eAAe","file":"static/js/main.114ce1a8.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:8000/api';\nexport const BASE_URL = 'http://www.localhost:3000';","import axios from 'axios';\nimport { API_URL } from '../config';\n\n// action name creator\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\nexport const LOAD_POST_TO_UPDATE = createActionName('LOAD_POST_TO_UPDATE');\nexport const CLEAR_POST_TO_UPDATE = createActionName('CLEAR_SINGLE_POST');\nexport const START_REQUEST = createActionName('START_REQUEST');\nexport const END_REQUEST = createActionName('END_REQUEST');\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\n\n/* SELECTORS */\n\nexport const getPosts = ({ posts }) => posts.data;\nexport const getPostsCount = ({ posts }) => posts.data.length;\nexport const getRequest = ({ posts }) => posts.request;\nexport const getSinglePost = ({ posts }) => posts.singlePost;\nexport const getPostToUpdate = ({ posts }) => posts.postToUpdate;\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\n\n/* ACTIONS */\n\nexport const startRequest = () => ({ type: START_REQUEST });\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\nexport const loadPostToUpdate = payload => ({ payload, type: LOAD_POST_TO_UPDATE });\nexport const clearSinglePost = () => ({ type: CLEAR_POST_TO_UPDATE });\nexport const endRequest = () => ({ type: END_REQUEST });\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\nexport const resetRequest = () => ({ type: RESET_REQUEST });\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\n\n/* INITIAL STATE */\n\nconst initialState = {\n  data: [],\n  request: {\n    pending: false,\n    error: null,\n    success: null,\n  },\n  singlePost: null,\n  postToUpdate: null,\n  amount: 0,\n  postsPerPage: 10,\n  presentPage: 0\n};\n\n/* REDUCER */\n\nexport default function reducer(statePart = initialState, action = {}) {\n  switch (action.type) {\n    \n    case LOAD_POSTS:\n      return { ...statePart, data: action.payload };\n\n    case LOAD_SINGLE_POST:\n      return { ...statePart, singlePost: action.payload };\n    \n    case LOAD_POST_TO_UPDATE:\n      return { ...statePart, postToUpdate: action.payload };\n    \n      case LOAD_POSTS_PAGE:\n      return {\n        ...statePart,\n        postsPerPage: action.payload.postsPerPage,\n        presentPage: action.payload.presentPage,\n        amount: action.payload.amount,\n        data: [...action.payload.posts],\n      };\n\n    case CLEAR_POST_TO_UPDATE:\n      return { ...statePart, postToUpdate: null };\n\n    case START_REQUEST:\n      return { ...statePart, request: { pending: true, error: null, success: null } };\n    \n    case END_REQUEST:\n      return { ...statePart, request: { pending: false, error: null, success: true } };\n\n    case RESET_REQUEST:\n      return { ...statePart, request: { pending: false, error: null, success: null } };\n\n    case ERROR_REQUEST:\n      return { ...statePart, request: { pending: false, error: action.error, success: false } };\n    \n    default:\n      return statePart;\n  };\n};\n\n/* THUNKS */\n\nexport const loadPostsRequest = () => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      let res = await axios.get(`${API_URL}/posts`);\n      await new Promise((resolve, reject) => resolve, 2000);\n      dispatch(loadPosts(res.data));\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\n\nexport const loadSinglePostRequest = (id, update) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n      const action = update ? loadPostToUpdate : loadSinglePost;\n      let res = await axios.get(`${API_URL}/posts/${id}`);\n      await new Promise((resolve, reject) => resolve, 2000);\n      dispatch(action(res.data));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\nexport const addPostRequest = (post) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      await axios.post(`${API_URL}/posts`, post);\n      await new Promise((resolve, reject) => resolve, 2000);\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\nexport const updatePostRequest = (post) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      await axios.patch(`${API_URL}/posts`, post);\n      await new Promise((resolve, reject) => resolve, 2000);\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n\n      const limit = postsPerPage || 10;\n      const startAt = (page - 1) * limit;\n\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\n      await new Promise((resolve, reject) => resolve, 2000);\n\n      const payload = {\n        posts: res.data.posts,\n        amount: res.data.amount,\n        postsPerPage: limit,\n        presentPage: page,\n      };\n\n      dispatch(loadPostsByPage(payload));\n      dispatch(endRequest());\n\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};\n\n\nexport const loadRandomPostRequest = () => {\n  return async dispatch => {\n\n    dispatch(startRequest());\n    try {\n      let res = await axios.get(`${API_URL}/posts/random`);\n      await new Promise((resolve, reject) => resolve, 2000);\n      dispatch(loadSinglePost(res.data));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n\n  };\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n// import reducers\nimport posts from './postsRedux';\n\n// combine reducers\nconst rootReducer = combineReducers({\n  posts,\n});\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\nimport './NavBar.scss';\nimport Logo from '../../common/Logo/Logo';\nimport MainMenu from '../../layout/MainMenu/MainMenu';\n\nclass NavBar extends React.Component {\n  state = {\n    links: [\n      { path: '/', title: 'Home' },\n      { path: '/posts/new', title: 'Add post' },\n      { path: '/posts', title: 'Posts' },\n      { path: '/contact', title: 'Contact' },\n      { path: '/posts/random', title: 'Random post'}\n    ],\n  }\n\n  render() {\n    const { links } = this.state;\n\n    return (\n      <nav className='navbar'>\n        <Logo />\n        <MainMenu links={links} />\n      </nav>\n    );\n  }\n\n};\n\nexport default NavBar;","import React from 'react'\nimport PageContainer from '../PageContainer/PageContainer';\nimport NavBar from '../../features/NavBar/NavBar';\n\nconst MainLayout = ({ children }) => (\n  <div>\n    <PageContainer>\n      <NavBar />\n      {children}\n    </PageContainer>\n  </div>\n);\n\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst HtmlBox = ({ children, ...otherProps }) => (\n  <div {...otherProps} className=\"html-box\">\n    {ReactHtmlParser(children)}\n  </div>\n);\n\nHtmlBox.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default HtmlBox;","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FacebookProvider, ShareButton } from 'react-facebook'\nimport { BASE_URL } from '../../../config';\n\nimport Button from '../../common/Button/Button';\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\n\nimport './PostSummary.scss';\n\nconst PostSummary = ({ id, title, content, author, location }) => (\n  <article className=\"post-summary\">\n    <SmallTitle>{title}</SmallTitle>\n    <FacebookProvider appId=\"727203911061100\">\n      <ShareButton href={`${BASE_URL}${location.pathname}`}>\n        Share\n      </ShareButton>\n    </FacebookProvider>\n    <p>Author: {author}</p>\n    <HtmlBox>{content}</HtmlBox>\n    <Link to={`/posts/${id}`}>\n      <Button variant=\"primary\">\n        Read more\n      </Button>\n    </Link>\n    <Link to={`/posts/edit/${id}`}>\n      <Button variant=\"primary\">\n        Update post\n      </Button>\n    </Link>\n  </article>\n);\n\nPostSummary.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  content: PropTypes.string,\n  author: PropTypes.string.isRequired\n};\n\nexport default withRouter(props => <PostSummary {...props} />);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport PostSummary from '../PostSummary/PostSummary';\n\nconst PostsList = ({ posts }) => (\n  <div>\n    <section className=\"posts-list\">\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\n    </section>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired\n    })\n  ),\n};\n\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n\n\nclass Pagination extends React.Component {\n\n  changePage = (newPage) => {\n    const { onPageChange } = this.props;\n\n    onPageChange(newPage);\n  }\n\n  renderNavButton = (type) => {\n    const { pages, page } = this.props;\n\n    const newPage = type === 'prev' ? page - 1 : page + 1;\n    const content = type === 'prev' ? '<' : '>';\n\n    const button = <div className='pagination__list__item' onClick={() => this.changePage(newPage)}>{content}</div>;\n\n    if (type === 'prev' && page !== 1) return button;\n    if (type === 'next' && page !== pages && pages > 1) return button;\n    return null;\n  }\n\n  render() {\n\n    const { pages, page } = this.props;\n    const { changePage } = this;\n\n    return (\n      <div className=\"pagination\">\n        <ul className=\"pagination__list\">\n\n          {this.renderNavButton('prev')}\n\n          {[...Array(pages)].map((el, pageNum) =>\n            <li\n              key={++pageNum}\n              onClick={() => { changePage(pageNum) }}\n              className={`pagination__list__item${((page) === pageNum) ? ' pagination__list__item--active' : ''}`}>\n              {pageNum}\n            </li>\n          )}\n\n          {this.renderNavButton('next')}\n\n        </ul>\n      </div>\n    );\n  }\n\n}\n\nPagination.propTypes = {\n  pages: PropTypes.number.isRequired,\n  initialPage: PropTypes.number,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport PostsList from '../PostsList/PostsList';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport Pagination from '../../common/Pagination/Pagination';\n\nclass Posts extends React.Component {\n  state = {\n    presentPage: this.props.initialPage || 1,\n    postsPerPage: this.props.postsPerPage || 10,\n    pagination: this.props.pagination !== undefined\n      ? \n        this.props.pagination\n      :\n        true\n  }\n\n  componentDidMount() { \n    const { loadPostsByPage } = this.props;\n    const { presentPage, postsPerPage } = this.state;\n\n    loadPostsByPage(presentPage, postsPerPage);\n  }\n\n  loadPostsPage = (page) => {\n    const { loadPostsByPage } = this.props;\n    const { postsPerPage } = this.state;\n\n    this.setState({ presentPage: page });\n    loadPostsByPage(page, postsPerPage);\n  }\n\n  renderContent() {\n\n    const { pending, error, success } = this.props.request;\n    const { posts } = this.props;\n    const { presentPage, pagination } = this.state;\n    switch (true) {\n\n      case !pending && success && posts.length > 0: \n        return (\n          <>\n            <PostsList posts={posts} />\n            { pagination \n              ?\n                <Pagination pages={this.props.pages} onPageChange={this.loadPostsPage} page={presentPage}/>\n              : \n                null\n            }\n          </>\n        )\n\n      case pending && !success:\n        return <Spinner />;\n\n      case !pending && error:\n        return <Alert variant='error'>{error}</Alert>;\n\n      case !pending && success && posts.length === 0:\n        return <Alert variant='info'>No posts...</Alert>;\n\n      default:\n        return null;\n        \n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderContent()}\n        \n      </div>\n    );\n  };\n\n};\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired\n    })\n  ),\n  loadPostsByPage: PropTypes.func.isRequired,\n  postsPerPage: PropTypes.number,\n};\n\nexport default Posts;","import { connect } from 'react-redux';\nimport { getPosts, getRequest, loadPostsByPageRequest, getPages } from '../../../redux/postsRedux';\nimport Posts from './Posts';\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n  request: getRequest(state),\n  pages: getPages(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst HomePage = () => (\n  <div>\n    <PageTitle>Blog</PageTitle>\n    <Posts postsPerPage={3} pagination={false} />\n  </div>\n);\n\nexport default HomePage;","import React from 'react';\n\nclass PostsCounter extends React.Component {\n\n  render() {\n    const { postsCount } = this.props;\n\n    return (\n      <div>{postsCount ? `Posts amount: ${postsCount}` : '' }</div>\n    );\n  }\n\n};\n\nexport default PostsCounter;\n","import { connect } from 'react-redux';\nimport { getPostsCount } from '../../../redux/postsRedux';\nimport PostsCounter from './PostsCounter';\n\nconst mapStateToProps = state => ({\n  postsCount: getPostsCount(state)\n});\n\nexport default connect(mapStateToProps)(PostsCounter);","import React from 'react';\n\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostsCounter from '../../features/PostsCounter/PostCounterContainer';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst PostsPage = () => (\n  <div>\n    <PageTitle>Posts list</PageTitle>\n    <PostsCounter />\n    <Posts />\n  </div>\n);\n\nexport default PostsPage;","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst ContactPage = () => (\n  <div>\n    <PageTitle>Kontakt</PageTitle>\n    <p>Your Favourite Blooger Ltd.</p>\n    <p>9432 Division Street</p>\n    <p>Stone Mountain, GA 30083</p>\n    <br/>\n    <p>Mobile Number: 207-914-3411</p>\n  </div>\n);\n\nexport default ContactPage;","import React from 'react';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>404 Not Found</h1>\n  </div>\n);\n\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { FacebookProvider, Comments } from 'react-facebook';\nimport { withRouter } from 'react-router-dom';\nimport { BASE_URL } from '../../../config';\nimport PostSummary from '../../features/PostSummary/PostSummary';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\n\nclass SinglePost extends Component {\n\n  componentDidMount() {\n    const { random, loadSinglePost, loadRandomPost } = this.props;\n    if (random) return loadRandomPost();\n    loadSinglePost();\n  }\n\n  renderContent() {\n    const { pending, error, success } = this.props.request;\n    const { singlePost, location } = this.props;\n\n    switch (true) {\n\n      case !pending && success && singlePost !== null:\n        return (\n          <>\n            <PostSummary {...singlePost} />\n            <FacebookProvider appId=\"727203911061100\">\n              <Comments href={`${BASE_URL}${location.pathname}`} />\n            </FacebookProvider>\n          </>\n        );\n\n      case pending && !success:\n        return <Spinner />;\n\n      case !pending && error:\n        return <Alert variant='error'>{error}</Alert>;\n\n      default:\n        return null;\n\n    }\n  }\n\n  render() {\n    return(\n      <div>{ this.renderContent() }</div>\n    );\n  } \n};\n\nPostSummary.propTypes = {\n  singlePost: PropTypes.object,\n  request: PropTypes.object,\n  loadSinglePost: PropTypes.func\n};\n\nexport default withRouter(props => <SinglePost {...props} />);\n","import { connect } from 'react-redux';\nimport { getSinglePost, loadSinglePostRequest, getRequest, loadRandomPostRequest } from '../../../redux/postsRedux';\nimport SinglePost from './SinglePost';\n\nconst mapStateToProps = state => ({\n  singlePost: getSinglePost(state),\n  request: getRequest(state)\n}); \n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  loadSinglePost: () => dispatch(loadSinglePostRequest( ownProps.id )),\n  loadRandomPost: () => dispatch(loadRandomPostRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\n\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\n\nconst PostPage = ({ match }) => {\n  const { id } = match.params;\n\n  return (\n    <div>\n      <SinglePost id={id} />\n    </div>\n  );\n};\n\nexport default PostPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport Editor from 'react-medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\n\nimport TextField from '../../common/TextField/TextField';\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\nimport Button from '../../common/Button/Button';\nimport Alert from '../../common/Alert/Alert';\nimport Spinner from '../../common/Spinner/Spinner';\n\nimport './PostForm.scss';\n\nclass PostForm extends React.Component {\n\n  state = {\n    post: {\n      title: '',\n      author: '',\n      content: ''\n    }\n  }\n\n  async componentDidMount () {\n    const {loadPost, resetRequest, isUpdate, id } = this.props\n    \n    if(isUpdate) {\n      await loadPost(id)\n      resetRequest();\n\n      this.setState({post: this.props.post});\n    } else {\n      resetRequest();\n    };\n  };\n  \n  handleChange = (e) => {\n    const { post } = this.state;\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } })\n  }\n\n  handleEditor = (text) => {\n    const { post } = this.state;\n    this.setState({ post: { ...post, content: text } })\n  }\n\n  sendPost = (e) => {\n    const { addPost, updatePost, isUpdate } = this.props;\n    const { post } = this.state;\n\n    const callback = isUpdate ? updatePost : addPost;\n\n    e.preventDefault();\n    callback(post);\n  }\n\n  render() {\n\n    const { post } = this.state;\n    const { handleChange, handleEditor, sendPost } = this;\n    const { request, isUpdate } = this.props;\n\n    if (request.error) return <Alert variant=\"error\">{request.error}</Alert>\n    else if (request.success) return <Alert variant=\"success\">{`Post has been ${isUpdate ? \"updated\" : \"added\"}!`}</Alert>\n    else if (request.pending) return <Spinner />\n    else return (\n      <form onSubmit={sendPost}>\n\n        <TextField\n          label=\"Title\"\n          value={post.title}\n          onChange={handleChange}\n          name=\"title\"\n        />\n\n        <TextField\n          label=\"Author\"\n          value={post.author}\n          onChange={handleChange}\n          name=\"author\"\n        />\n\n        <SectionTitle>Edit post content</SectionTitle>\n\n        <Editor\n          className=\"content-editor\"\n          text={post.content}\n          onChange={handleEditor}\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\n        />\n\n        <Button variant=\"primary\">{isUpdate? \"Update\" : \"Add\"} post</Button>\n\n      </form>\n    );\n  }\n};\n\nPostForm.propTypes = {\n  request: PropTypes.object.isRequired,\n  addPost: PropTypes.func.isRequired,\n  updatePost: PropTypes.func.isRequired,\n  isUpdate: PropTypes.bool\n};\n\nexport default PostForm;","import { connect } from 'react-redux';\nimport { getRequest, addPostRequest, resetRequest, updatePostRequest,  loadSinglePostRequest, getPostToUpdate } from '../../../redux/postsRedux';\nimport PostForm from './PostForm';\n\nconst mapStateToProps = (state) => ({\n  request: getRequest(state),\n  post: getPostToUpdate(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: (post) => dispatch(addPostRequest(post)),\n  updatePost: (post) => dispatch(updatePostRequest(post)),\n  resetRequest: () => dispatch(resetRequest()),\n  loadPost: (id) => dispatch(loadSinglePostRequest(id, true)),\n  // clearUpdatePost: () => dispatch(clearSinglePost())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\nimport PostForm from '../../features/PostForm/PostFormContainer';\n\nconst AddPost = () => (\n  <div>\n    <PostForm/>\n  </div>\n);\n\nexport default AddPost;","import React from 'react';\nimport PostForm from '../../features/PostForm/PostFormContainer';\n\nconst UpdatePost = ({ match }) => (\n  <div>\n    <PostForm isUpdate={true} id={match.params.id}/>\n  </div>\n);\n\nexport default UpdatePost;","import React from 'react';\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\n\nconst RandomPost = ({ match }) => (\n  <div>\n    <SinglePost random={true} />\n  </div>\n);\n\nexport default RandomPost;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n// import routes\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\nimport Post from './components/pages/Post/PostPage';\nimport AddPost from './components/pages/AddPost/AddPost';\nimport UpdatePost from './components/pages/UpdatePost/UpdatePost';\nimport RandomPost from './components/pages/RandomPost/RandomPost';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/posts\" exact component={Posts} />\n          <Route path=\"/contact\" exact component={Contact} />\n          <Route path=\"/posts/new\" exact component={AddPost} />\n          <Route path=\"/posts/random\" exact component={RandomPost} />\n          <Route path=\"/posts/:id\" exact component={Post} />\n          <Route path=\"/posts/edit/:id\" exact component={UpdatePost} />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    );\n  }\n\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));"],"sourceRoot":""}